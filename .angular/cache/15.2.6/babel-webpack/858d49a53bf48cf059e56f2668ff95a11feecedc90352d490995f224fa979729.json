{"ast":null,"code":"import { increment, decrement, reset } from '../counter.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class MyCounterComponent {\n  constructor(store) {\n    this.store = store;\n    this.count$ = store.select('count');\n  }\n  increment() {\n    this.store.dispatch(increment());\n  }\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n  reset() {\n    this.store.dispatch(reset());\n  }\n}\nMyCounterComponent.ɵfac = function MyCounterComponent_Factory(t) {\n  return new (t || MyCounterComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nMyCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyCounterComponent,\n  selectors: [[\"app-my-counter\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[3, \"click\"]],\n  template: function MyCounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_0_listener() {\n        return ctx.increment();\n      });\n      i0.ɵɵtext(1, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_5_listener() {\n        return ctx.decrement();\n      });\n      i0.ɵɵtext(6, \"Decrement\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset Counter\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n    }\n  },\n  dependencies: [i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,oBAAoB;;;;AAMhE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,KAA+B;IAA/B,UAAK,GAALA,KAAK;IACvB,IAAI,CAACC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC,OAAO,CAAC;EACrC;EAEAP,SAAS;IACP,IAAI,CAACK,KAAK,CAACG,QAAQ,CAACR,SAAS,EAAE,CAAC;EAClC;EAEAC,SAAS;IACP,IAAI,CAACI,KAAK,CAACG,QAAQ,CAACP,SAAS,EAAE,CAAC;EAClC;EAEAC,KAAK;IACH,IAAI,CAACG,KAAK,CAACG,QAAQ,CAACN,KAAK,EAAE,CAAC;EAC9B;;AAjBWC,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BC,iCAA8B;MAAtBA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,yBAAS;MAAAA,iBAAS;MAEhDA,2BAAK;MAAAA,YAAmC;;MAAAA,iBAAM;MAE9CA,iCAA8B;MAAtBA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,yBAAS;MAAAA,iBAAS;MAEhDA,iCAA0B;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,6BAAa;MAAAA,iBAAS;;;MAJ3CA,eAAmC;MAAnCA,8EAAmC","names":["increment","decrement","reset","MyCounterComponent","constructor","store","count$","select","dispatch","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/atulpatil/WebstormProjects/AngularFirst/src/app/my-counter/my-counter.component.ts","/Users/atulpatil/WebstormProjects/AngularFirst/src/app/my-counter/my-counter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment, decrement, reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-my-counter',\n  templateUrl: './my-counter.component.html',\n})\nexport class MyCounterComponent {\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n    this.count$ = store.select('count');\n  }\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n}\n","<button (click)=\"increment()\">Increment</button>\n\n<div>Current Count: {{ count$ | async }}</div>\n\n<button (click)=\"decrement()\">Decrement</button>\n\n<button (click)=\"reset()\">Reset Counter</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}